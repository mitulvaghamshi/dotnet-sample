// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTracker.Data;

#nullable disable

namespace MovieTracker.Migrations
{
    [DbContext(typeof(MovieTrackerContext))]
    partial class MovieTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieTracker.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreDescription")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Genres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreDescription = "Action"
                        },
                        new
                        {
                            Id = 2,
                            GenreDescription = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            GenreDescription = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            GenreDescription = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            GenreDescription = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            GenreDescription = "Crime"
                        },
                        new
                        {
                            Id = 7,
                            GenreDescription = "Documentary"
                        },
                        new
                        {
                            Id = 8,
                            GenreDescription = "Drama"
                        },
                        new
                        {
                            Id = 9,
                            GenreDescription = "Family"
                        },
                        new
                        {
                            Id = 10,
                            GenreDescription = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            GenreDescription = "Film Noir"
                        },
                        new
                        {
                            Id = 12,
                            GenreDescription = "History"
                        },
                        new
                        {
                            Id = 13,
                            GenreDescription = "Horror"
                        },
                        new
                        {
                            Id = 14,
                            GenreDescription = "Music"
                        },
                        new
                        {
                            Id = 15,
                            GenreDescription = "Musical"
                        },
                        new
                        {
                            Id = 16,
                            GenreDescription = "Mystery"
                        },
                        new
                        {
                            Id = 17,
                            GenreDescription = "Romance"
                        },
                        new
                        {
                            Id = 18,
                            GenreDescription = "Sci-Fi"
                        },
                        new
                        {
                            Id = 19,
                            GenreDescription = "Short Film"
                        },
                        new
                        {
                            Id = 20,
                            GenreDescription = "Sport"
                        },
                        new
                        {
                            Id = 21,
                            GenreDescription = "Superhero"
                        },
                        new
                        {
                            Id = 22,
                            GenreDescription = "Thriller"
                        },
                        new
                        {
                            Id = 23,
                            GenreDescription = "War"
                        },
                        new
                        {
                            Id = 24,
                            GenreDescription = "Western"
                        });
                });

            modelBuilder.Entity("MovieTracker.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateSeen")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateSeen = new DateTime(2023, 2, 10, 17, 44, 36, 84, DateTimeKind.Local).AddTicks(2273),
                            GenreId = 1,
                            Rating = 6,
                            Title = "Birds of Prey"
                        },
                        new
                        {
                            Id = 2,
                            DateSeen = new DateTime(2023, 3, 7, 17, 44, 36, 84, DateTimeKind.Local).AddTicks(2309),
                            Rating = 7,
                            Title = "Palm Springs"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 8,
                            Title = "Hamilton"
                        });
                });

            modelBuilder.Entity("MovieTracker.Models.Movie", b =>
                {
                    b.HasOne("MovieTracker.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MovieTracker.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
